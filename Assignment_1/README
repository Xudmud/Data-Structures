/------------------------------------------------------
|  Name      :  Gregory Wicklund
|  Student ID:  810906774
|  Class     :  CSC 2421
|  HW#       :  1
|  Due Date  :  31 August, 2017
\-----------------------------------------------------

			Readme


/-----------------------------------------------------
|	Description of the program
\-----------------------------------------------------

Vector guessing program.

Files:
guess.h: header file
guess.cpp: implementation of functions from guess.h and main.cpp
main.cpp: main program file.

/------------------------------------------------------
|	Source Files
\------------------------------------------------------

Name:	main.cpp
	Main program. Initializes RNG and runs startGuess() to start the vector
	guessing program.

Name:	guess.h
	Contains the definition for the class guess.

Name:	guess.cpp
	Defines and implements the startGuess() function, and the constructors and
	member functions of the guess class.

/------------------------------------------------------
|	Program Status
\------------------------------------------------------
	
	Program developed and tested on GNU g++ 5.4.0
	Compiled and tested on:
		Ubuntu on Windows Subsystem for Linux (WSL)
		openSUSE on WSL.
		csegrid
	

/------------------------------------------------------
|	Instructions
\------------------------------------------------------
	
	Unzip the file WicklundHW1.zip
	$ unzip WicklundHW1.zip
	
	cd into the WicklundHW1 directory
	run make
	$ make

	Run the guess program

	$ ./guess
	
/------------------------------------------------------
|	Functions and Variables
\------------------------------------------------------

Variables:
vector<int> nums
Vector of specified size made of pseudo-random integers ranging from 1 to a
given value.

vector<int> nums2
Holds a copy of the initial vector nums, for use with checking guesses.

int size
size variable for vector.

int maxValue
Maximum value the ints can be in the vector.

bool winner
Boolean giving whether or not the win condition of guessing all the values of
the vector is met.


Functions:
guess::guess()
Default constructor. Left intentionally blank, never actually called during the
program.

guess::guess(int,int)
{
	Constructor taking two arguments: size and maxValue. Generates the vector
	nums with number of entries size, with values ranging from 1 to maxValue.
}

guess::printNums()
{
	Prints the contents of the vector nums.
}

guess::guessInts()
Copies the vector nums into a second vector nums2. Takes input from the user to
guess what the vector in the guess object is. The program then compares their
guess to the copied vector (order doesn't matter). If they've guessed correctly,
print a winning message and the original vector to show they were correct. If
they have not guessed correctly, give the number of values that were correct
(but not which ones) and ask again. They have three tries to find the numbers,
or the program will print a losing message and the original vector.

guess::checkNum(int,int)
Takes in the current guess and current size of the copied vector. Checks the
guess against each elemtnt remaining in the vector. If the guess is a match,
remove that element in the copied vector and set the temporary "correct"
variable to true.

guess::checkWin()
Reads the state of bool winner and acts accordingly.


/------------------------------------------------------
|	Limitations
\------------------------------------------------------
As stated in http://www.cplusplus.com/reference/cstdlib/rand/ the values
generated by rand() are not uniformly distributed; lower values are slightly
more likely.

guessInts() uses cin to get its values, it will continue to read from stdin
until it encounters EOF/EOL, and will spill over into the next guess if the
number of ints exceeds the size of the vector. Exception handling or dropping
additional inputs could solve this.
